.. _02-microcomputersummary_index:

================================
微机原理学习总结
================================

1 冯诺依曼架构
================================
1.1 概述
-------------------------
1946年，第一台计算机ENIAC诞生，人类进入计算机时代，后来，美籍匈牙利数学家：冯.诺依曼提出了计算机“存储程序”的计算机设计理念，即将计算机指令进行编码后存储在计算机的存储器中，需要的时候可以顺序地执行程序代码，从而控制计算机运行，这就是冯.诺依曼计算机体系的开端。

.. image:: images/nuoyiman.jpg

早期的计算机设计中，程序和数据是俩个截然不同的概念，数据放在存储器中，而程序作为控制器的一部分，这样的计算机计算效率低，灵活性较差。冯.诺依曼结构中，将程序和数据一样看待，将程序编码为数据，然后与数据一同存放在存储器中，这样计算机就可以调用存储器中的程序来处理数据了。意味着，无论什么程序，最终都是会转换为数据的形式存储在存储器中，要执行相应的程序只需要从存储器中依次取出指令、执行，冯.诺依曼结构的灵魂所在正是这里：减少了硬件的连接，这种设计思想导致了硬件和软件的分离，即硬件设计和程序设计可以分开执行！！！这就催生了程序员这个职业的诞生！！！

概括的来讲，冯.诺依曼结构消除了原始计算机体系中，只能依靠硬件控制程序的状况（程序作为控制器的一部分，作为硬件存在），将程序编码存储在存储器中，实现了可编程的计算机功能，实现了硬件设计和程序设计的分离，大大促进了计算机的发展。

灵魂就是将程序从硬件实现转换为软件实现（存储程序控制原理）！！！

核心设计思想主要体现在如下三个方面：

 * 程序、数据的最终形态都是二进制编码，程序和数据都是以二进制方式存储在存储器中的，二进制编码也是计算机能够所识别和执行的编码。（可执行二进制文件：.bin文件）
 * 程序、数据和指令序列，都是事先存在主（内）存储器中，以便于计算机在工作时能够高速地从存储器中提取指令并加以分析和执行。
 * 确定了计算机的五个基本组成部分：运算器、控制器、存储器、输入设备、输出设备

1.2 运算器
-------------------------
首先计算机要有运算处理数据的能力，所以需要一个处理单元来完成各种算数运算和逻辑运算，这就是算术逻辑单元（Arithmetic Logic Unit，ALU）。ALU的主要功能就是在控制信号的作用下，完成加、减、乘、除等算术运算以及与、或、非、异或等逻辑运算以及移位、补位等运算。

运算器的主要部件就是ALU，运算器的处理对象是数据，所以数据的长度以及数据的表示方法，对运算器的影响很大。大多数通用计算机是以16、32、64位数据作为运算器一次处理数据的长度。能够对一个数据的所有位同时处理运算器称为并行运算器，一次只能对数据的一个位处理的运算器称为串行运算器。

运算器与其他部分的关系：

计算机运算时，运算器的操作对象和操作种类由控制器决定。运算器操作的数据从内存中读取，处理的结果再写入内存（或者暂时存放在内部寄存器中），而且运算器对内存数据的读写是由控制器来进行的。

1.3 控制器
--------------------------
控制器又称为控制单元（Control Unit），是计算机的神经中枢和指挥中心，只有在控制器的控制下，整个计算机才能够有条不紊地工作、自动执行程序。

控制器是整个CPU的指挥控制中心，由指令寄存器IR（InstructionRegister）、程序计数器PC（ProgramCounter）和操作控制器OC（OperationController）三个部件组成。

控制器的工作流程为：从内存中取指令、翻译指令、分析指令，然后根据指令的内存向有关部件发送控制命令，控制相关部件执行指令所包含的操作。

控制器和运算器共同组成中央处理器（Central Processing Unit），CPU是一块超大规模集成电路，是计算机运算核心和控制核心，CPU的主要功能是解释计算机指令以及处理数据。

1.4 存储器
-----------------------------
内部存储器称为内存或者主存，是用来存放欲执行的程序和数据。

在计算机内部，程序和数据都是以二进制代码的形式存储的，它们均以字节为单位（8位）存储在存储器中，一个字节占用一个存储单元，并且每个存储单元都有唯一的地址号。

这里以字节（8位）为存储单元，就与上面运算器的操作数据的大小联系起来了，16、32、64都是8的倍数


CPU可以直接使用指令对内部存储器按照地址进行读写俩种操作，读：将内存中某个存储单元的内容读出，送入CPU的某个寄存器中；写：在控制器的控制下，将CPU中某寄存器内容传到某个存储单元中。

要注意，内存中的数据和地址码都是二进制数，但是俩者是不同的，一个地址可以指向一个存储单元，地址是存储单元的位置，数据是存储单元的内容，数据可以是操作码、可以是CPU要处理阿数据、也可以是数据的地址，地址码的长度由内存单元的个数确定。

内存的存取速度会直接影响计算机的运算速度，由于CPU是高速器件，但是CPU的速度是受制于内存的存取速度的，所以为了解决CPU和内存速度不匹配的问题，在CPU和内存直接设置了一种高速缓冲存储器Cache。 Cache是计算机中的一个高速小容量存储器，其中存放的是CPU近期要执行的指令和数据，其存取速度可以和CPU的速度匹配，一般采用静态RAM充当Cache

内存按工作方式的不同又可以分为俩部分：

RAM：随机存储器，可以被CPU随机读取，一般存放CPU将要执行的程序、数据，断电丢失数据

ROM：只读存储器，只能被CPU读，不能轻易被CPU写，用来存放永久性的程序和数据，比如：系统引导程序、监控程序等。具有掉电非易失性。

1.5 程序在CPU中执行过程
-----------------------------------
程序在CPU中执行的过程可以分为以下几个步骤：
 * 取指：CPU从内存中取出下一条需要执行的指令，并将其存储在指令寄存器中。
 * 译码：CPU对指令进行解码，以确定需要执行的操作类型。
 * 执行：根据译码结果，CPU执行相应的操作，如进行算术逻辑运算、数据传输等。
 * 访存：如果需要从内存中读取或写入数据，CPU将执行访存操作。
 * 回写：如果寄存器中的结果需要写回内存，CPU将执行回写操作。
 * 更新PC：CPU更新程序计数器（PC），以指向下一条需要执行的指令。
 * 这个过程会不断重复，直到程序执行完毕。

相关术语：
 * 1. Ad(Address) 形式地址
 * 2. AC(Accumulation register)累加寄存器
 * 3. ALU(Arithmetic logic unit)算术逻辑单元
 * 4. MQ(Multiplier-Quotient Register)乘商寄存器
 * 5. DR(Data Register) 数据寄存器
 * 6. AR(Address Register) 地址寄存器(MAR)
 * 7. IR(Instruction Register) 指令寄存器
 * 8. BR(Buffer Register) 缓冲寄存器(MBR)
 * 9. ID(Instruction Decoder) 指令译码器
 * 10. PC(ProgramCounter) 程序计数器

2 微处理器
================================

2.1 8086处理器
-----------------------------

2.2 ARM处理器
-----------------------------

3 总线
===================

4 指令系统
====================

5 汇编语言
===================

6 输入输出与中断技术
=======================================



`参照 https://blog.csdn.net/qq_43701912/article/details/107518517 <https://blog.csdn.net/qq_43701912/article/details/107518517>``